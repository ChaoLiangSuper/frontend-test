// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Sidebar /> component should successfully render without crash 1`] = `
<Sidebar>
  <WithStyles(ForwardRef(Drawer))
    anchor="right"
    onClose={[Function]}
    open={true}
  >
    <ForwardRef(Drawer)
      anchor="right"
      classes={
        Object {
          "docked": "MuiDrawer-docked",
          "modal": "MuiDrawer-modal",
          "paper": "MuiDrawer-paper",
          "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
          "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
          "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
          "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
          "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
          "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
          "paperAnchorRight": "MuiDrawer-paperAnchorRight",
          "paperAnchorTop": "MuiDrawer-paperAnchorTop",
          "root": "MuiDrawer-root",
        }
      }
      onClose={[Function]}
      open={true}
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "hover": "rgba(0, 0, 0, 0.08)",
              "hoverOpacity": 0.08,
              "selected": "rgba(0, 0, 0, 0.14)",
            },
            "augmentColor": [Function],
            "background": Object {
              "default": "#fafafa",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "#303f9f",
              "light": "#7986cb",
              "main": "#3f51b5",
            },
            "secondary": Object {
              "contrastText": "#fff",
              "dark": "#c51162",
              "light": "#ff4081",
              "main": "#f50057",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "rgba(0, 0, 0, 0.87)",
              "secondary": "rgba(0, 0, 0, 0.54)",
            },
            "tonalOffset": 0.2,
            "type": "light",
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
            "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
            "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 400,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1,
            },
            "h2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3.75rem",
              "fontWeight": 300,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1,
            },
            "h3": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "3rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.04,
            },
            "h4": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "2.125rem",
              "fontWeight": 400,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.17,
            },
            "h5": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.5rem",
              "fontWeight": 400,
              "letterSpacing": "0em",
              "lineHeight": 1.33,
            },
            "h6": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1.25rem",
              "fontWeight": 500,
              "letterSpacing": "0.0075em",
              "lineHeight": 1.6,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "tooltip": 1500,
          },
        }
      }
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "hover": "rgba(0, 0, 0, 0.08)",
                    "hoverOpacity": 0.08,
                    "selected": "rgba(0, 0, 0, 0.14)",
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.04,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.17,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.33,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDrawer-root MuiDrawer-modal"
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Portal)
          disablePortal={false}
          onRendered={[Function]}
        >
          <Portal
            containerInfo={
              <body
                style="overflow: hidden; padding-right: 0px;"
              >
                <div
                  class="MuiDrawer-root MuiDrawer-modal"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    class="MuiBackdrop-root"
                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiPaper-root MuiPaper-elevation16 MuiDrawer-paper MuiDrawer-paperAnchorRight"
                    role="document"
                    tabindex="-1"
                  >
                    <div
                      class="makeStyles-sidebar-1"
                    >
                      <button
                        class="MuiButtonBase-root MuiIconButton-root makeStyles-closeButton-2"
                        tabindex="0"
                        type="button"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            class="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                            />
                          </svg>
                        </span>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </button>
                      <h4
                        class="MuiTypography-root MuiTypography-h4"
                      >
                        XXXXXX-NUM
                      </h4>
                      <ul
                        class="MuiList-root MuiList-padding"
                      >
                        <li
                          class="MuiListItem-root MuiListItem-gutters"
                        >
                          <div
                            class="makeStyles-leftColumn-3"
                          >
                            Assigned to
                          </div>
                          <div
                            class="makeStyles-rightColumn-4"
                          >
                            assignee
                          </div>
                        </li>
                        <li
                          class="MuiListItem-root MuiListItem-gutters"
                        >
                          <div
                            class="makeStyles-leftColumn-3"
                          >
                            Short description
                          </div>
                          <div
                            class="makeStyles-rightColumn-4"
                          >
                            short description
                          </div>
                        </li>
                        <li
                          class="MuiListItem-root MuiListItem-gutters"
                        >
                          <div
                            class="makeStyles-leftColumn-3"
                          >
                            Application
                          </div>
                          <div
                            class="makeStyles-rightColumn-4"
                          >
                            application
                          </div>
                        </li>
                        <li
                          class="MuiListItem-root MuiListItem-gutters"
                        >
                          <div
                            class="makeStyles-leftColumn-3"
                          >
                            test1
                          </div>
                          <div
                            class="makeStyles-rightColumn-4"
                          >
                            test1
                          </div>
                        </li>
                        <li
                          class="MuiListItem-root MuiListItem-gutters"
                        >
                          <div
                            class="makeStyles-leftColumn-3"
                          >
                            test2
                          </div>
                          <div
                            class="makeStyles-rightColumn-4"
                          >
                            test2
                          </div>
                        </li>
                        <li
                          class="MuiListItem-root MuiListItem-gutters"
                        >
                          <div
                            class="makeStyles-leftColumn-3"
                          >
                            test3
                          </div>
                          <div
                            class="makeStyles-rightColumn-4"
                          >
                            test3
                          </div>
                        </li>
                      </ul>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="MuiDrawer-root MuiDrawer-modal"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <WithStyles(ForwardRef(Backdrop))
                onClick={[Function]}
                open={true}
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <ForwardRef(Backdrop)
                  classes={
                    Object {
                      "invisible": "MuiBackdrop-invisible",
                      "root": "MuiBackdrop-root",
                    }
                  }
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Fade)
                    in={true}
                    onClick={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <Transition
                      appear={true}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onClick={[Function]}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <div
                        aria-hidden={true}
                        className="MuiBackdrop-root"
                        onClick={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                            "visibility": undefined,
                          }
                        }
                      />
                    </Transition>
                  </ForwardRef(Fade)>
                </ForwardRef(Backdrop)>
              </WithStyles(ForwardRef(Backdrop))>
              <TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Slide)
                  appear={false}
                  direction="left"
                  in={true}
                  onEnter={[Function]}
                  onExited={[Function]}
                  role="document"
                  tabIndex="-1"
                  timeout={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <Transition
                    appear={false}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="document"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <WithStyles(ForwardRef(Paper))
                      className="MuiDrawer-paper MuiDrawer-paperAnchorRight"
                      elevation={16}
                      role="document"
                      square={true}
                      style={
                        Object {
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <ForwardRef(Paper)
                        className="MuiDrawer-paper MuiDrawer-paperAnchorRight"
                        classes={
                          Object {
                            "elevation0": "MuiPaper-elevation0",
                            "elevation1": "MuiPaper-elevation1",
                            "elevation10": "MuiPaper-elevation10",
                            "elevation11": "MuiPaper-elevation11",
                            "elevation12": "MuiPaper-elevation12",
                            "elevation13": "MuiPaper-elevation13",
                            "elevation14": "MuiPaper-elevation14",
                            "elevation15": "MuiPaper-elevation15",
                            "elevation16": "MuiPaper-elevation16",
                            "elevation17": "MuiPaper-elevation17",
                            "elevation18": "MuiPaper-elevation18",
                            "elevation19": "MuiPaper-elevation19",
                            "elevation2": "MuiPaper-elevation2",
                            "elevation20": "MuiPaper-elevation20",
                            "elevation21": "MuiPaper-elevation21",
                            "elevation22": "MuiPaper-elevation22",
                            "elevation23": "MuiPaper-elevation23",
                            "elevation24": "MuiPaper-elevation24",
                            "elevation3": "MuiPaper-elevation3",
                            "elevation4": "MuiPaper-elevation4",
                            "elevation5": "MuiPaper-elevation5",
                            "elevation6": "MuiPaper-elevation6",
                            "elevation7": "MuiPaper-elevation7",
                            "elevation8": "MuiPaper-elevation8",
                            "elevation9": "MuiPaper-elevation9",
                            "root": "MuiPaper-root",
                            "rounded": "MuiPaper-rounded",
                          }
                        }
                        elevation={16}
                        role="document"
                        square={true}
                        style={
                          Object {
                            "visibility": undefined,
                          }
                        }
                        tabIndex="-1"
                      >
                        <div
                          className="MuiPaper-root MuiPaper-elevation16 MuiDrawer-paper MuiDrawer-paperAnchorRight"
                          role="document"
                          style={
                            Object {
                              "visibility": undefined,
                            }
                          }
                          tabIndex="-1"
                        >
                          <div
                            className="makeStyles-sidebar-1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="makeStyles-closeButton-2"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                className="makeStyles-closeButton-2"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root makeStyles-closeButton-2"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root makeStyles-closeButton-2"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="MuiButtonBase-root MuiIconButton-root makeStyles-closeButton-2"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </span>
                                      <NoSsr>
                                        <WithStyles(TouchRipple)
                                          center={true}
                                        >
                                          <TouchRipple
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                enter={true}
                                                exit={true}
                                              />
                                            </span>
                                          </TouchRipple>
                                        </WithStyles(TouchRipple)>
                                      </NoSsr>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Typography))
                              variant="h4"
                            >
                              <ForwardRef(Typography)
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                theme={
                                  Object {
                                    "breakpoints": Object {
                                      "between": [Function],
                                      "down": [Function],
                                      "keys": Array [
                                        "xs",
                                        "sm",
                                        "md",
                                        "lg",
                                        "xl",
                                      ],
                                      "only": [Function],
                                      "up": [Function],
                                      "values": Object {
                                        "lg": 1280,
                                        "md": 960,
                                        "sm": 600,
                                        "xl": 1920,
                                        "xs": 0,
                                      },
                                      "width": [Function],
                                    },
                                    "direction": "ltr",
                                    "mixins": Object {
                                      "gutters": [Function],
                                      "toolbar": Object {
                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                          "minHeight": 48,
                                        },
                                        "@media (min-width:600px)": Object {
                                          "minHeight": 64,
                                        },
                                        "minHeight": 56,
                                      },
                                    },
                                    "overrides": Object {},
                                    "palette": Object {
                                      "action": Object {
                                        "active": "rgba(0, 0, 0, 0.54)",
                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                        "hover": "rgba(0, 0, 0, 0.08)",
                                        "hoverOpacity": 0.08,
                                        "selected": "rgba(0, 0, 0, 0.14)",
                                      },
                                      "augmentColor": [Function],
                                      "background": Object {
                                        "default": "#fafafa",
                                        "paper": "#fff",
                                      },
                                      "common": Object {
                                        "black": "#000",
                                        "white": "#fff",
                                      },
                                      "contrastThreshold": 3,
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "error": Object {
                                        "contrastText": "#fff",
                                        "dark": "#d32f2f",
                                        "light": "#e57373",
                                        "main": "#f44336",
                                      },
                                      "getContrastText": [Function],
                                      "grey": Object {
                                        "100": "#f5f5f5",
                                        "200": "#eeeeee",
                                        "300": "#e0e0e0",
                                        "400": "#bdbdbd",
                                        "50": "#fafafa",
                                        "500": "#9e9e9e",
                                        "600": "#757575",
                                        "700": "#616161",
                                        "800": "#424242",
                                        "900": "#212121",
                                        "A100": "#d5d5d5",
                                        "A200": "#aaaaaa",
                                        "A400": "#303030",
                                        "A700": "#616161",
                                      },
                                      "primary": Object {
                                        "contrastText": "#fff",
                                        "dark": "#303f9f",
                                        "light": "#7986cb",
                                        "main": "#3f51b5",
                                      },
                                      "secondary": Object {
                                        "contrastText": "#fff",
                                        "dark": "#c51162",
                                        "light": "#ff4081",
                                        "main": "#f50057",
                                      },
                                      "text": Object {
                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                        "hint": "rgba(0, 0, 0, 0.38)",
                                        "primary": "rgba(0, 0, 0, 0.87)",
                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                      },
                                      "tonalOffset": 0.2,
                                      "type": "light",
                                    },
                                    "props": Object {},
                                    "shadows": Array [
                                      "none",
                                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                    ],
                                    "shape": Object {
                                      "borderRadius": 4,
                                    },
                                    "spacing": [Function],
                                    "transitions": Object {
                                      "create": [Function],
                                      "duration": Object {
                                        "complex": 375,
                                        "enteringScreen": 225,
                                        "leavingScreen": 195,
                                        "short": 250,
                                        "shorter": 200,
                                        "shortest": 150,
                                        "standard": 300,
                                      },
                                      "easing": Object {
                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                      },
                                      "getAutoHeightDuration": [Function],
                                    },
                                    "typography": Object {
                                      "body1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.5,
                                      },
                                      "body2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.01071em",
                                        "lineHeight": 1.43,
                                      },
                                      "button": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.02857em",
                                        "lineHeight": 1.75,
                                        "textTransform": "uppercase",
                                      },
                                      "caption": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.03333em",
                                        "lineHeight": 1.66,
                                      },
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": 14,
                                      "fontWeightBold": 700,
                                      "fontWeightLight": 300,
                                      "fontWeightMedium": 500,
                                      "fontWeightRegular": 400,
                                      "h1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "6rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.01562em",
                                        "lineHeight": 1,
                                      },
                                      "h2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3.75rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.00833em",
                                        "lineHeight": 1,
                                      },
                                      "h3": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.04,
                                      },
                                      "h4": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "2.125rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00735em",
                                        "lineHeight": 1.17,
                                      },
                                      "h5": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.5rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.33,
                                      },
                                      "h6": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.25rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.0075em",
                                        "lineHeight": 1.6,
                                      },
                                      "htmlFontSize": 16,
                                      "overline": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.08333em",
                                        "lineHeight": 2.66,
                                        "textTransform": "uppercase",
                                      },
                                      "pxToRem": [Function],
                                      "round": [Function],
                                      "subtitle1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.75,
                                      },
                                      "subtitle2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.00714em",
                                        "lineHeight": 1.57,
                                      },
                                    },
                                    "zIndex": Object {
                                      "appBar": 1100,
                                      "drawer": 1200,
                                      "mobileStepper": 1000,
                                      "modal": 1300,
                                      "snackbar": 1400,
                                      "tooltip": 1500,
                                    },
                                  }
                                }
                                variant="h4"
                              >
                                <h4
                                  className="MuiTypography-root MuiTypography-h4"
                                >
                                  XXXXXX-NUM
                                </h4>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                            <WithStyles(ForwardRef(List))>
                              <ForwardRef(List)
                                classes={
                                  Object {
                                    "dense": "MuiList-dense",
                                    "padding": "MuiList-padding",
                                    "root": "MuiList-root",
                                    "subheader": "MuiList-subheader",
                                  }
                                }
                              >
                                <ul
                                  className="MuiList-root MuiList-padding"
                                >
                                  <WithStyles(ForwardRef(ListItem))>
                                    <ForwardRef(ListItem)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                          "button": "MuiListItem-button",
                                          "container": "MuiListItem-container",
                                          "dense": "MuiListItem-dense",
                                          "disabled": "Mui-disabled",
                                          "divider": "MuiListItem-divider",
                                          "focusVisible": "Mui-focusVisible",
                                          "gutters": "MuiListItem-gutters",
                                          "root": "MuiListItem-root",
                                          "secondaryAction": "MuiListItem-secondaryAction",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <li
                                        className="MuiListItem-root MuiListItem-gutters"
                                        disabled={false}
                                      >
                                        <div
                                          className="makeStyles-leftColumn-3"
                                          key=".0"
                                        >
                                          Assigned to
                                        </div>
                                        <div
                                          className="makeStyles-rightColumn-4"
                                          key=".1"
                                        >
                                          assignee
                                        </div>
                                      </li>
                                    </ForwardRef(ListItem)>
                                  </WithStyles(ForwardRef(ListItem))>
                                  <WithStyles(ForwardRef(ListItem))>
                                    <ForwardRef(ListItem)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                          "button": "MuiListItem-button",
                                          "container": "MuiListItem-container",
                                          "dense": "MuiListItem-dense",
                                          "disabled": "Mui-disabled",
                                          "divider": "MuiListItem-divider",
                                          "focusVisible": "Mui-focusVisible",
                                          "gutters": "MuiListItem-gutters",
                                          "root": "MuiListItem-root",
                                          "secondaryAction": "MuiListItem-secondaryAction",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <li
                                        className="MuiListItem-root MuiListItem-gutters"
                                        disabled={false}
                                      >
                                        <div
                                          className="makeStyles-leftColumn-3"
                                          key=".0"
                                        >
                                          Short description
                                        </div>
                                        <div
                                          className="makeStyles-rightColumn-4"
                                          key=".1"
                                        >
                                          short description
                                        </div>
                                      </li>
                                    </ForwardRef(ListItem)>
                                  </WithStyles(ForwardRef(ListItem))>
                                  <WithStyles(ForwardRef(ListItem))>
                                    <ForwardRef(ListItem)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                          "button": "MuiListItem-button",
                                          "container": "MuiListItem-container",
                                          "dense": "MuiListItem-dense",
                                          "disabled": "Mui-disabled",
                                          "divider": "MuiListItem-divider",
                                          "focusVisible": "Mui-focusVisible",
                                          "gutters": "MuiListItem-gutters",
                                          "root": "MuiListItem-root",
                                          "secondaryAction": "MuiListItem-secondaryAction",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <li
                                        className="MuiListItem-root MuiListItem-gutters"
                                        disabled={false}
                                      >
                                        <div
                                          className="makeStyles-leftColumn-3"
                                          key=".0"
                                        >
                                          Application
                                        </div>
                                        <div
                                          className="makeStyles-rightColumn-4"
                                          key=".1"
                                        >
                                          application
                                        </div>
                                      </li>
                                    </ForwardRef(ListItem)>
                                  </WithStyles(ForwardRef(ListItem))>
                                  <WithStyles(ForwardRef(ListItem))
                                    key="test1"
                                  >
                                    <ForwardRef(ListItem)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                          "button": "MuiListItem-button",
                                          "container": "MuiListItem-container",
                                          "dense": "MuiListItem-dense",
                                          "disabled": "Mui-disabled",
                                          "divider": "MuiListItem-divider",
                                          "focusVisible": "Mui-focusVisible",
                                          "gutters": "MuiListItem-gutters",
                                          "root": "MuiListItem-root",
                                          "secondaryAction": "MuiListItem-secondaryAction",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <li
                                        className="MuiListItem-root MuiListItem-gutters"
                                        disabled={false}
                                      >
                                        <div
                                          className="makeStyles-leftColumn-3"
                                          key=".0"
                                        >
                                          test1
                                        </div>
                                        <div
                                          className="makeStyles-rightColumn-4"
                                          key=".1"
                                        >
                                          test1
                                        </div>
                                      </li>
                                    </ForwardRef(ListItem)>
                                  </WithStyles(ForwardRef(ListItem))>
                                  <WithStyles(ForwardRef(ListItem))
                                    key="test2"
                                  >
                                    <ForwardRef(ListItem)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                          "button": "MuiListItem-button",
                                          "container": "MuiListItem-container",
                                          "dense": "MuiListItem-dense",
                                          "disabled": "Mui-disabled",
                                          "divider": "MuiListItem-divider",
                                          "focusVisible": "Mui-focusVisible",
                                          "gutters": "MuiListItem-gutters",
                                          "root": "MuiListItem-root",
                                          "secondaryAction": "MuiListItem-secondaryAction",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <li
                                        className="MuiListItem-root MuiListItem-gutters"
                                        disabled={false}
                                      >
                                        <div
                                          className="makeStyles-leftColumn-3"
                                          key=".0"
                                        >
                                          test2
                                        </div>
                                        <div
                                          className="makeStyles-rightColumn-4"
                                          key=".1"
                                        >
                                          test2
                                        </div>
                                      </li>
                                    </ForwardRef(ListItem)>
                                  </WithStyles(ForwardRef(ListItem))>
                                  <WithStyles(ForwardRef(ListItem))
                                    key="test3"
                                  >
                                    <ForwardRef(ListItem)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                          "button": "MuiListItem-button",
                                          "container": "MuiListItem-container",
                                          "dense": "MuiListItem-dense",
                                          "disabled": "Mui-disabled",
                                          "divider": "MuiListItem-divider",
                                          "focusVisible": "Mui-focusVisible",
                                          "gutters": "MuiListItem-gutters",
                                          "root": "MuiListItem-root",
                                          "secondaryAction": "MuiListItem-secondaryAction",
                                          "selected": "Mui-selected",
                                        }
                                      }
                                    >
                                      <li
                                        className="MuiListItem-root MuiListItem-gutters"
                                        disabled={false}
                                      >
                                        <div
                                          className="makeStyles-leftColumn-3"
                                          key=".0"
                                        >
                                          test3
                                        </div>
                                        <div
                                          className="makeStyles-rightColumn-4"
                                          key=".1"
                                        >
                                          test3
                                        </div>
                                      </li>
                                    </ForwardRef(ListItem)>
                                  </WithStyles(ForwardRef(ListItem))>
                                </ul>
                              </ForwardRef(List)>
                            </WithStyles(ForwardRef(List))>
                          </div>
                        </div>
                      </ForwardRef(Paper)>
                    </WithStyles(ForwardRef(Paper))>
                  </Transition>
                </ForwardRef(Slide)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Drawer)>
  </WithStyles(ForwardRef(Drawer))>
</Sidebar>
`;
